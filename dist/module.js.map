{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","$","_","moment","d3","MultistatPanelCtrl","$scope","$injector","variableSrv","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupLabelFontSize","GroupGap","LabelMargin","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","variables","forEach","v","console","log","name","current","value","updateNamedValue","split","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","onDataSnapshotLoad","className","id","obj","names","shift","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","render","type","columns","i","text","cols0","concat","index","up","ctrl","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","labelCol","sortCol","groupCol","recolorCol","colName","GroupColName","Value","j","Col","groupedLabelFunc","regex","RegExp","matchingRows","label","match","push","oo","nest","key","rollup","d","entries","x","Object","values","assign","mean","Array","from","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","b","aPos","search","bPos","localeCompare","$container","h","height","w","width","buildDateHtml","horizontal","labelMargin","isNumeric","lowSideMargin","highSideMargin","svg","select","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","filter","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","g","exec","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","attr","style","tooltipDiv","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","r","pattern","matchType","test","indexOf","color","Option","plotGroupHorizontal","numRows","left","hh","dh","labels","map","Math","random","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","range","stripeScale","oddeven","enter","step","g1","maxValueWidth","valueCol","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","points","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","lineGraph","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","floor","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\r\n/*jshint -W087 */\r\n/*jshint -W014 */\r\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\r\nimport $ from \"jquery\";\r\nimport \"jquery.flot\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport \"./css/multistat-panel.css!\";\r\nimport d3 from \"./external/d3.min\";\r\n\r\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector, variableSrv) {\r\n    super($scope, $injector, variableSrv);\r\n\r\n    var panelDefaults = {\r\n      timeFrom: null,\r\n      timeShift: null,\r\n      BarPadding: 10,\r\n      MultiBarPadding: 10,\r\n      BaseLineColor: \"#ff0000\",\r\n      BaseLineWidth: 1,\r\n      BaseLineValue: null,\r\n      DateTimeColName: \"date\",\r\n      DateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      TooltipDateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      FlashHighLimitBar: false,\r\n      FlashLowLimitBar: false,\r\n      HighAxisColor: \"#ffffff\",\r\n      HighAxisWidth: 1,\r\n      HighBarColor: \"rgb(120, 128, 0)\",\r\n      RecolorColName: null,\r\n      HighLimitBarColor: \"#ff0000\",\r\n      HighLimitBarFlashColor: \"#ffa500\",\r\n      HighLimitBarFlashTimeout: 1000,\r\n      HighLimitLineColor: \"#ff0000\",\r\n      HighLimitValue: null,\r\n      HighLmitLineWidth: 1,\r\n      HighSideMargin: 22,\r\n      Horizontal: false,\r\n      LabelColName: \"\",\r\n      LabelNameFilter: \"\",\r\n      LabelColor: \"#ffffff\",\r\n      OutOfRangeLabelColor: \"#ffffff\",\r\n      GroupLabelColor: \"#ffffff\",\r\n      LabelFontSize: \"100%\",\r\n      GroupLabelFontSize: \"200%\",\r\n      GroupGap: 5,\r\n      LabelMargin: null,\r\n      Links: [],\r\n      LowAxisColor: \"#ffffff\",\r\n      LowAxisWidth: 1,\r\n      LowBarColor: \"teal\",\r\n      LowLimitBarColor: \"#ff0000\",\r\n      LowLimitBarFlashColor: \"#ffa500\",\r\n      LowLimitBarFlashTimeout: 200,\r\n      LowLimitLineColor: \"#ff0000\",\r\n      LowLimitValue: null,\r\n      LowLmitLineWidth: 1,\r\n      LowSideMargin: 22,\r\n      MaxLineColor: \"rgb(74, 232, 12)\",\r\n      MaxLineWidth: 1,\r\n      MaxLineValue: null,\r\n      MinLineColor: \"#ff0000\",\r\n      MinLineWidth: 1,\r\n      MinLineValue: null,\r\n      RecolorHighLimitBar: false,\r\n      RecolorLowLimitBar: false,\r\n      RecolorRules: [],\r\n      ShowBaseLine: false,\r\n      ShowDate: false,\r\n      Aggregate: \"last\",\r\n      ShowHighLimitLine: false,\r\n      ShowLabels: true,\r\n      ShowGroupLabels: true,\r\n      ShowLeftAxis: true,\r\n      ShowLowLimitLine: false,\r\n      ShowMaxLine: false,\r\n      ShowMinLine: false,\r\n      ShowRightAxis: true,\r\n      ShowValues: true,\r\n      SortColName: \"value\",\r\n      SortDirection: \"ascending\",\r\n      TZOffsetHours: 0,\r\n      ToolTipType: \"\",\r\n      ToolTipFontSize: \"100%\",\r\n      ValueColName: \"temperature\",\r\n      Values: [],\r\n      ValueDecimals: 2,\r\n      ValueColor: \"#ffffff\",\r\n      ValueFontSize: \"100%\",\r\n      OddRowColor: \"rgba(33, 33, 34, 0.92)\",\r\n      EvenRowColor: \"rgba(61, 61, 64, 0.78)\",\r\n      OutlineColor: \"rgba(245, 255, 0, 0.1)\",\r\n      GroupSortString: \"\",\r\n      GroupCols: 0,\r\n      GroupNameFilter: \"\",\r\n      ScaleFactor: 1,\r\n      ValuePosition: \"top\",\r\n      LableAngle: 0,\r\n      ShowBars: true,\r\n      ShowLines: false,\r\n      LineWidth: 5,\r\n      LineColor: \"blue\",\r\n      DotSize: 10,\r\n      DotColor: \"white\",\r\n      CurveType: \"Monotone\",\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    // Migrate old configurations from single value column to array of value columns\r\n    if (this.panel.Values.length === 0) {\r\n      this.panel.Values = [\r\n        {\r\n          Name: this.panel.ValueColName,\r\n          LowBarColor: this.panel.LowBarColor,\r\n          HighBarColor: this.panel.HighBarColor,\r\n        },\r\n      ];\r\n      delete this.panel.ValueColName;\r\n      delete this.panel.LowBarColor;\r\n      delete this.panel.HighBarColor;\r\n    }\r\n\r\n    variableSrv.variables.forEach((v) => {\r\n      console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\r\n      this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);\r\n    });\r\n\r\n    this.events.on(\"render\", this.onRender.bind(this));\r\n    this.events.on(\"data-received\", this.onDataReceived.bind(this));\r\n    this.events.on(\"data-error\", this.onDataError.bind(this));\r\n    this.events.on(\"init-edit-mode\", this.onInitEditMode.bind(this));\r\n    this.events.on(\"data-snapshot-load\", this.onDataSnapshotLoad.bind(this));\r\n\r\n    //    this.className = this.panelID;\r\n    this.className = \"michaeldmoore-multistat-panel-\" + this.panel.id;\r\n  }\r\n\r\n  updateNamedValue(obj, names, value) {\r\n    let name = names.shift();\r\n    if (obj[name]) {\r\n      if (names.length) this.updateNamedValue(obj[name], names, value);\r\n      else obj[name] = Number(value);\r\n    }\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.seriesList = [];\r\n    this.data = [];\r\n    this.displayStatusMessage(\r\n      \"Query failure, Status=\" + err.status + \", \" + err.statusText\r\n    );\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.metricNames = [\r\n      \"min\",\r\n      \"max\",\r\n      \"avg\",\r\n      \"current\",\r\n      \"total\",\r\n      \"name\",\r\n      \"first\",\r\n      \"delta\",\r\n      \"diff\",\r\n      \"range\",\r\n    ];\r\n    this.sortDirections = [\"none\", \"ascending\", \"descending\"];\r\n    this.aggregations = [\"all\", \"last\", \"first\", \"mean\", \"max\", \"min\"];\r\n    this.fontSizes = [\r\n      \"20%\",\r\n      \"30%\",\r\n      \"50%\",\r\n      \"70%\",\r\n      \"80%\",\r\n      \"100%\",\r\n      \"110%\",\r\n      \"120%\",\r\n      \"150%\",\r\n      \"170%\",\r\n      \"200%\",\r\n      \"250%\",\r\n      \"300%\",\r\n      \"350%\",\r\n      \"400%\",\r\n    ];\r\n    this.valuePositions = [\"bar base\", \"bar end\", \"top\"];\r\n    this.curveTypes = [\"Linear\", \"Monotone\", \"Cardinal\", \"Catmull-Rom\"];\r\n    this.matchTypes = [\"exact\", \"subset\", \"list\", \"reg-ex\"];\r\n    this.tooltipTypes = [\"light\", \"dark\"];\r\n    this.addEditorTab(\r\n      \"Columns\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/columns.html\",\r\n      2\r\n    );\r\n    this.addEditorTab(\r\n      \"Layout\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/layout.html\",\r\n      3\r\n    );\r\n    this.addEditorTab(\r\n      \"Grouping\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/grouping.html\",\r\n      4\r\n    );\r\n    this.addEditorTab(\r\n      \"Options\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/options.html\",\r\n      5\r\n    );\r\n    this.addEditorTab(\r\n      \"Lines-and-Limits\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/linesandlimits.html\",\r\n      6\r\n    );\r\n    this.addEditorTab(\r\n      \"Bar links\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/barlinks.html\",\r\n      7\r\n    );\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    this.cols = [];\r\n    // console.log('onDataReceived(' + JSON.stringify(data) + ')');\r\n    if (data.length == 0) {\r\n      this.displayStatusMessage(\"No data to show\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    } else if (data[0].type == \"table\" || data[0].columns) {\r\n      this.data = data[0];\r\n\r\n      for (let i = 0; i < this.data.columns.length; i++)\r\n        this.cols[i] = this.data.columns[i].text;\r\n      this.cols0 = [\"\"].concat(this.cols);\r\n\r\n      this.render();\r\n    } else {\r\n      this.displayStatusMessage(\"Multistat only supports Table datasets\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  onReorderValues(index, up) {\r\n    const Values = this.ctrl.panel.Values;\r\n    if (up) {\r\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\r\n    } else {\r\n      if (index + 1 < Values.length)\r\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderRecolorRules(index, up) {\r\n    const RecolorRules = this.ctrl.panel.RecolorRules;\r\n    if (up) {\r\n      if (index)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index - 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    } else {\r\n      if (index + 1 < RecolorRules.length)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index + 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderLinks(index, up) {\r\n    const Links = this.ctrl.panel.Links;\r\n    if (up) {\r\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\r\n    } else {\r\n      if (index + 1 < Links.length)\r\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  buildDateHtml(dateTimeCol) {\r\n    var $title = this.elem.closest(\".panel-container\").find(\".panel-title\");\r\n    var $maxDate = $title.find(\"span.michaeldmoore-multistat-panel-maxDate\");\r\n\r\n    if ($maxDate.length == 0)\r\n      $maxDate = $title\r\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\r\n        .children()\r\n        .last();\r\n\r\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\r\n      var maxDate = this.rows[0][dateTimeCol];\r\n\r\n      for (let i = 1; i < this.rows.length; i++) {\r\n        if (maxDate < this.rows[i][dateTimeCol])\r\n          maxDate = this.rows[i][dateTimeCol];\r\n      }\r\n\r\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, \"h\");\r\n\r\n      if (this.panel.DateFormat.toUpperCase() == \"ELAPSED\")\r\n        $maxDate.text(dd.fromNow()).show();\r\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\r\n    } else $maxDate.hide();\r\n  }\r\n\r\n  displayStatusMessage(msg) {\r\n    this.elem.html(\r\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\r\n        msg +\r\n        \"</div>\"\r\n    );\r\n  }\r\n\r\n  onRender() {\r\n    if (this.data != null && this.data.rows && this.data.rows.length) {\r\n      var cols = this.cols;\r\n      var dateTimeCol = -1;\r\n      var labelCol = -1;\r\n      var sortCol = 0;\r\n      var groupCol = -1;\r\n      var recolorCol = -1;\r\n      //      var valueCols = [];\r\n      //      this.panel.Values.forEach(ValueCol => {valueCols.push(-1);});\r\n\r\n      cols.forEach((colName, i) => {\r\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\r\n        if (colName == this.panel.LabelColName) labelCol = i;\r\n        if (colName == this.panel.SortColName) sortCol = i;\r\n        if (colName == this.panel.GroupColName) groupCol = i;\r\n        if (colName == this.panel.RecolorColName) recolorCol = i;\r\n\r\n        this.panel.Values.forEach((Value, j) => {\r\n          if (colName == Value.Name) {\r\n            Value.Col = i;\r\n            //            valueCols[j] = i;\r\n          }\r\n        });\r\n      });\r\n\r\n      const groupedLabelFunc = function (obj) {\r\n        if (groupCol != -1) return obj[groupCol] + \":\" + obj[labelCol];\r\n        else return obj[labelCol];\r\n      };\r\n\r\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\r\n        var regex = new RegExp(this.panel.LabelNameFilter, \"\");\r\n        this.matchingRows = [];\r\n        for (let i = 0; i < this.data.rows.length; i++) {\r\n          var dd = this.data.rows[i];\r\n          var label = dd[labelCol];\r\n          if (label.match(regex) != null) this.matchingRows.push(dd);\r\n        }\r\n\r\n        if (this.matchingRows.length == 0) {\r\n          this.displayStatusMessage(\r\n            \"No data.  Regex filter '\" +\r\n              this.panel.LabelNameFilter +\r\n              \"' eliminated all \" +\r\n              this.data.rows.length +\r\n              \" rows from current query\"\r\n          );\r\n          return;\r\n        }\r\n      } else this.matchingRows = this.data.rows;\r\n\r\n      if (this.panel.Aggregate != \"all\" && labelCol != -1) {\r\n        var oo = [];\r\n        this.rows = [];\r\n        switch (this.panel.Aggregate) {\r\n          case \"first\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[0];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"last\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[d.length - 1];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"mean\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                dd[this.panel.Values[0].Col] = d3.mean(d, function (d) {\r\n                  return d[this.panel.Values[0].Col];\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"max\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                dd[this.panel.Values[0].Col] = d3.max(d, function (d) {\r\n                  return d[this.panel.Values[0].Col];\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"min\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                dd[this.panel.Values[0].Col] = d3.min(d, function (d) {\r\n                  return d[this.panel.Values[0].Col];\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n        }\r\n      } else {\r\n        this.rows = this.matchingRows;\r\n      }\r\n\r\n      var groupNameOffset = this.panel.ShowGroupLabels\r\n        ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n        : 0;\r\n\r\n      if (groupCol >= 0) {\r\n        this.groupedRows = d3\r\n          .nest()\r\n          .key(function (d) {\r\n            return d[groupCol];\r\n          })\r\n          .entries(this.rows);\r\n\r\n        if (this.panel.GroupNameFilter.length > 0) {\r\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, \"\");\r\n          let matchingGroups = [];\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let groupName = this.groupedRows[i].key;\r\n            if (groupName.match(regexGroupRows) != null)\r\n              matchingGroups.push(this.groupedRows[i]);\r\n          }\r\n\r\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\r\n          else {\r\n            this.displayStatusMessage(\r\n              \"No groups.  Group Regex filter '\" +\r\n                this.panel.GroupNameFilter +\r\n                \"' eliminated all \" +\r\n                this.groupedRows.length +\r\n                \" groups from current query\"\r\n            );\r\n            return;\r\n          }\r\n        }\r\n\r\n        let groupSortString = this.panel.GroupSortString;\r\n\r\n        this.groupedRows.sort(function (a, b) {\r\n          var aPos = groupSortString.search(a.key);\r\n          var bPos = groupSortString.search(b.key);\r\n\r\n          if (aPos == bPos) return a.key.localeCompare(b.key);\r\n          else if (aPos == -1) return 1;\r\n          else if (bPos == -1) return -1;\r\n          else return aPos - bPos;\r\n        });\r\n      } else {\r\n        this.groupedRows = null;\r\n      }\r\n\r\n      this.elem.html(\r\n        \"<svg class='\" +\r\n          this.className +\r\n          \"'  style='height:100%; width:100%'></svg>\"\r\n      );\r\n      var $container = this.elem.find(\".\" + this.className);\r\n\r\n      var h = $container.height();\r\n      var w = $container.width() - 15;\r\n      this.buildDateHtml(dateTimeCol);\r\n\r\n      var horizontal = this.panel.Horizontal;\r\n\r\n      var labelMargin =\r\n        $.isNumeric(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\r\n          ? this.panel.LabelMargin\r\n          : null;\r\n      var lowSideMargin =\r\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\r\n      var highSideMargin =\r\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\r\n\r\n      this.svg = d3.select(\".\" + this.className).append(\"svg\");\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.highflash\")\r\n        .interrupt();\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.lowflash\")\r\n        .interrupt();\r\n\r\n      var id = this.panel.id;\r\n      var barPadding = this.panel.BarPadding;\r\n      var multiBarPadding = this.panel.MultiBarPadding;\r\n      var baseLineValue = this.panel.BaseLineValue;\r\n      var minLineValue = this.panel.MinLineValue;\r\n      var maxLineValue = this.panel.MaxLineValue;\r\n      var highLimitValue = this.panel.HighLimitValue;\r\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\r\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\r\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\r\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\r\n      var Links = this.panel.Links;\r\n      var lowLimitValue = this.panel.LowLimitValue;\r\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\r\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\r\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\r\n      var RecolorRules = this.panel.RecolorRules;\r\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\r\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\r\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\r\n      var tooltipType = this.panel.ToolTipType;\r\n      var tooltipFontSize = this.panel.ToolTipFontSize;\r\n      var DateTimeColName = this.panel.DateTimeColName;\r\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\r\n      var ValueColName = this.panel.ValueColName;\r\n      var ValueDecimals = this.panel.ValueDecimals;\r\n      var OddRowColor = this.panel.OddRowColor;\r\n      var EvenRowColor = this.panel.EvenRowColor;\r\n      var OutlineColor = this.panel.OutlineColor;\r\n      var TZOffsetHours = this.panel.TZOffsetHours;\r\n      var GroupCols = this.panel.GroupCols;\r\n      var GroupGap = this.panel.GroupGap;\r\n      var ScaleFactor = Number(this.panel.ScaleFactor);\r\n      var LabelColor = this.panel.LabelColor;\r\n      var ValuePosition = this.panel.ValuePosition;\r\n\r\n      var Values = this.panel.Values.filter((value) => value.Col >= 0); // ignore unmatched value columns\r\n\r\n      var panelID = \"michaeldmoore-multistat-panel-\" + id;\r\n      var tooltipDivID = \"michaeldmoore-multistat-panel-tooltip-\" + id;\r\n\r\n      var minValue =\r\n        Values.length &&\r\n        d3.min(this.rows, function (d) {\r\n          let min = d[Values[0].Col];\r\n          for (var i = 1; i < Values.length; i++) {\r\n            let col = Values[i].Col;\r\n            let val = Number(d[col]);\r\n            if (min > val) min = val;\r\n          }\r\n          return min * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(minLineValue) == false) minLineValue = minValue;\r\n\r\n      var maxValue =\r\n        Values.length &&\r\n        d3.max(this.rows, function (d) {\r\n          let max = d[Values[0].Col];\r\n          for (var i = 1; i < Values.length; i++) {\r\n            let col = Values[i].Col;\r\n            let val = Number(d[col]);\r\n            if (max < val) max = val;\r\n          }\r\n          return max * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(maxLineValue) == false) maxLineValue = maxValue;\r\n\r\n      if ($.isNumeric(baseLineValue) == false) baseLineValue = 0;\r\n\r\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(lowLimitValue) && minLineValue > lowLimitValue)\r\n        minLineValue = lowLimitValue;\r\n\r\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(highLimitValue) && maxLineValue < highLimitValue)\r\n        maxLineValue = highLimitValue;\r\n\r\n      $(\"#\" + tooltipDivID).remove();\r\n\r\n      var sortData = function (data, sortDirection) {\r\n        if (sortDirection != \"none\") {\r\n          var ascending = sortDirection == \"ascending\";\r\n          data.sort(function (x, y) {\r\n            let xx = x[sortCol];\r\n            let yy = y[sortCol];\r\n\r\n            if ($.isNumeric(xx) && $.isNumeric(yy))\r\n              return ascending ? xx - yy : yy - xx;\r\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\r\n          });\r\n        }\r\n      };\r\n\r\n      var translateValues = function (s, d) {\r\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\r\n        let s1 = s;\r\n        const re = /\\{[^}]+\\}/g;\r\n        let g = re.exec(s);\r\n        while (g) {\r\n          for (var i = 0; i < cols.length; i++) {\r\n            if (g == \"{\" + cols[i] + \"}\") {\r\n              s1 = s1.replace(g, d[i]);\r\n              break;\r\n            }\r\n          }\r\n          g = re.exec(s);\r\n        }\r\n        return s1;\r\n      };\r\n\r\n      var getTooltipContent = function (d) {\r\n        let html = \"\";\r\n        if (tooltipType) {\r\n          html += \"<table style='font-size:\" + (tooltipFontSize.replace(\"%\", \"\")/100) + \"em'>\";\r\n          if (labelCol != -1)\r\n            html +=\r\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\r\n              d[labelCol] +\r\n              \"</th></tr></thead>\";\r\n          if (Array.isArray(d)){\r\n            html += \"<tbody>\";\r\n            for (var i = 0; i < d.length; i++) {\r\n              if (i != labelCol) {\r\n                var cc = cols[i];\r\n                var dd = d[i];\r\n\r\n                if (cc == DateTimeColName)\r\n                  dd = moment(dd)\r\n                    .add(TZOffsetHours, \"h\")\r\n                    .format(TooltipDateFormat);\r\n                else if (cc == ValueColName && $.isNumeric(dd))\r\n                  dd = Number(dd).toFixed(ValueDecimals);\r\n\r\n                html += \"<tr><td>\" + cc + \"</td><td>\" + dd + \"</td></tr>\";\r\n              }\r\n            }\r\n            html += \"</tbody></table>\";\r\n          }\r\n        }\r\n\r\n        if (Links.length) {\r\n          html += \"<table><tbody>\";\r\n          Links.forEach((l) => {\r\n            html +=\r\n              \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\r\n              translateValues(l.url, d) +\r\n              (l.newtab ? \"' target='_blank'\" : \"'\") +\r\n              \">\" +\r\n              translateValues(l.name, d) +\r\n              \"</a></td></tr>\";\r\n          });\r\n          html += \"</tbody></table>\";\r\n        }\r\n        return html;\r\n      };\r\n\r\n      var isInTooltip = false;\r\n      var $panel;\r\n      var $panelContent;\r\n      var panelContent;\r\n      var tooltipShow = function (d) {\r\n//        if ((tooltipType && Array.isArray(d)) || Links.length) {\r\n          if ($(\"#\" + tooltipDivID).length == 0) {\r\n            $panel = $(\".\" + panelID);\r\n            $panelContent = $panel.parent().parent().parent().parent();\r\n            panelContent = d3.selectAll($panelContent);\r\n            panelContent\r\n              .append(\"div\")\r\n              .attr(\"id\", tooltipDivID)\r\n              .style(\"opacity\", 0);\r\n          }\r\n\r\n          const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n          tooltipDiv\r\n            .classed(\r\n              \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n              true\r\n            )\r\n            .html(getTooltipContent(d))\r\n            .on(\"mouseover\", function () {\r\n              if (!isInTooltip) {\r\n                isInTooltip = true;\r\n                tooltipHide(true);\r\n              }\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              isInTooltip = false;\r\n              tooltipHide(false);\r\n            });\r\n\r\n          const $tooltipDiv = $(\"#\" + tooltipDivID);\r\n          const tooltipWidth = $tooltipDiv.width();\r\n          const tooltipHeight = $tooltipDiv.height();\r\n          const minTop = 28;\r\n\r\n          const mouseCoordinates = d3.mouse(panelContent.node());\r\n          let Left = mouseCoordinates[0] - tooltipWidth / 2;\r\n          let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\r\n\r\n          let panelWidth = $panel.width();\r\n          let panelHeight = $panel.height();\r\n\r\n          if (Left < 0) Left = 0;\r\n          else if (Left > panelWidth - tooltipWidth)\r\n            Left = panelWidth - tooltipWidth;\r\n\r\n          if (Top < 0) Top = 0;\r\n          else if (Top > panelHeight + minTop - tooltipHeight)\r\n            Top = panelHeight + minTop - tooltipHeight;\r\n\r\n          tooltipDiv\r\n            .transition()\r\n            .duration(200)\r\n            .style(\"opacity\", 1.0)\r\n            .style(\"left\", Left + \"px\")\r\n            .style(\"top\", Top + \"px\");\r\n//        }\r\n      };\r\n\r\n      var tooltipHide = function (cancel) {\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        if (cancel) {\r\n          //console.log(\"cancelling tooltip hide\");\r\n          tooltipDiv.transition().style(\"opacity\", 1.0);\r\n        } else {\r\n          tooltipDiv\r\n            .transition()\r\n            .duration(2000)\r\n            .style(\"opacity\", 0)\r\n            .on(\"end\", function () {\r\n              d3.select(this)\r\n                .html(\"\")\r\n                .classed(\r\n                  \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n                  false\r\n                );\r\n            });\r\n        }\r\n      };\r\n\r\n      var scaleAndClipValue = function (d) {\r\n        var val = d * ScaleFactor;\r\n        if (val > maxLineValue) val = maxLineValue;\r\n        if (val < minLineValue) val = minLineValue;\r\n\r\n        return val;\r\n      };\r\n\r\n      var getBarColor = function (d, valueDef) {\r\n        if (recolorCol != -1) {\r\n          let recolorString = d[recolorCol];\r\n\r\n          if (RecolorRules.length) {\r\n            if (recolorString) {\r\n              let recolorRule = RecolorRules.find((r) => {\r\n                if (r.pattern) {\r\n                  switch (r.matchType) {\r\n                    case \"reg-ex\":\r\n                      let re = RegExp(r.pattern);\r\n                      return re.test(recolorString);\r\n\r\n                    case \"list\":\r\n                      return r.pattern.indexOf(recolorString) != -1;\r\n\r\n                    case \"subset\":\r\n                      return recolorString.indexOf(r.pattern) != -1;\r\n\r\n                    default:\r\n                      return r.pattern === recolorString;\r\n                  }\r\n                }\r\n                return false;\r\n              });\r\n\r\n              if (recolorRule) return recolorRule.color;\r\n            }\r\n          }\r\n\r\n          // no matching rule found, check if recolorString is a valid color\r\n          const s = new Option().style;\r\n          s.color = recolorString;\r\n          if (s.color !== \"\") return recolorString;\r\n        }\r\n\r\n        let value = d[valueDef.Col] * ScaleFactor;\r\n        if (recolorHighLimitBar && value > highLimitValue)\r\n          return HighLimitBarColor;\r\n        if (recolorLowLimitBar && value < lowLimitValue)\r\n          return LowLimitBarColor;\r\n\r\n        // All else fails, let's use the standard colors for this bar...\r\n        return value > baseLineValue\r\n          ? valueDef.HighBarColor\r\n          : valueDef.LowBarColor;\r\n      };\r\n\r\n      if (horizontal) {\r\n        var plotGroupHorizontal = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g1 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueWidth = 0;\r\n\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", left + w)\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"end\")\r\n                  .attr(\"dominant-baseline\", \"central\")\r\n                  .each(function (d, i) {\r\n                    var thisWidth = this.getComputedTextLength();\r\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            w -= maxValueWidth;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelWidth = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g1.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                let value = d[panel.Values[0].Col] * ScaleFactor;\r\n                return value > maxLineValue || value < minLineValue\r\n                  ? panel.OutOfRangeLabelColor\r\n                  : panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var x = left + a / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisWidth = a;\r\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\r\n              });\r\n\r\n            if ($.isNumeric(labelMargin)) {\r\n              left += labelMargin;\r\n              w -= labelMargin;\r\n            } else {\r\n              left += maxLabelWidth;\r\n              w -= maxLabelWidth;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([minLineValue, maxLineValue])\r\n            .range([left + labelMargin, left + w])\r\n            .nice();\r\n\r\n          function vLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"y1\", hh + highSideMargin)\r\n              .attr(\"x1\", valueScale(value))\r\n              .attr(\"y2\", hh + dh - lowSideMargin)\r\n              .attr(\"x2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            vLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            vLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n                g1.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"width\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(val) - valueScale(baseLineValue)\r\n                    );\r\n                  })\r\n                  .attr(\"height\", height)\r\n                  .attr(\"x\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (height + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            if (panel.LineWidth) {\r\n              var points = [];\r\n              var bw = labelScale.step();\r\n              for (var i = 0; i < data.length; i++) {\r\n                var d = data[i];\r\n                var y = hh + highSideMargin + (i + 0.5) * bw;\r\n                var x = valueScale(d[this.panel.Values[0].Col] * ScaleFactor);\r\n                points.push({\r\n                  x,\r\n                  y,\r\n                });\r\n              }\r\n\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneY;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              var lineGraph = svg\r\n                .append(\"path\")\r\n                .attr(\"d\", lineFunction(points))\r\n                .attr(\"stroke\", panel.LineColor)\r\n                .attr(\"stroke-width\", panel.LineWidth)\r\n                .attr(\"fill\", \"none\");\r\n            }\r\n\r\n            if (panel.DotSize) {\r\n              g1.append(\"circle\")\r\n                .attr(\"r\", panel.DotSize / 2.0)\r\n                .attr(\"fill\", panel.DotColor)\r\n                .attr(\"cy\", function (d) {\r\n                  return (\r\n                    labelScale(d[labelCol]) +\r\n                    (bw * (1.0 - barPadding / 100.0)) / 2.0\r\n                  );\r\n                })\r\n                .attr(\"cx\", function (d) {\r\n                  return valueScale(d[this.panel.Values[0].Col] * ScaleFactor);\r\n                });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val) + (val > baseLineValue);\r\n                    }\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return d[panel.Values[0].Col] * ScaleFactor >\r\n                        baseLineValue\r\n                        ? \"start\"\r\n                        : \"end\";\r\n                    else\r\n                      return d[panel.Values[0].Col] * ScaleFactor >\r\n                        baseLineValue\r\n                        ? \"end\"\r\n                        : \"start\";\r\n                  })\r\n                  .attr(\"dominant-baseline\", \"central\");\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          // Add High Side Value Axis (X)\r\n          if (highSideMargin > 0) {\r\n            var ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(1,\" + (hh + highSideMargin) + \")\")\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisTop(valueScale));\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n\r\n          // Add Low Side Value Axis (X)\r\n          if (lowSideMargin > 0) {\r\n            var ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(0,\" + (hh + dh - lowSideMargin) + \")\"\r\n              )\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisBottom(valueScale));\r\n\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n        };\r\n\r\n        if (this.groupedRows != null) {\r\n          var gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          var dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each row of groups...\r\n          var pointsPerRow = [];\r\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\r\n            pointsPerRow.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let rr = Math.floor(i / gcols);\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\r\n          }\r\n\r\n          var totalPoints = 0;\r\n          for (let i = 0; i < pointsPerRow.length; i++)\r\n            totalPoints += pointsPerRow[i];\r\n\r\n          var rowOverheadHeight =\r\n            groupNameOffset +\r\n            this.panel.LowSideMargin +\r\n            this.panel.HighSideMargin;\r\n          var rowHeight =\r\n            (h - pointsPerRow.length * rowOverheadHeight) / totalPoints;\r\n\r\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          var hh = 0;\r\n          for (var rr = 0; rr < numRows; rr++) {\r\n            var nn = pointsPerRow[rr];\r\n            var dh = rowOverheadHeight + nn * rowHeight;\r\n            hh += dh;\r\n            for (var cc = 0; cc < gcols; cc++) {\r\n              var ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupHorizontal(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  cc * dw,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          plotGroupHorizontal(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      } else {\r\n        var plotGroupVertical = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t.attr(\"width\", w)\r\n\t\t\t.attr(\"height\", dh)\r\n\t\t\t.attr(\"x\", left)\r\n\t\t\t.attr(\"y\", hh)\r\n\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .range([left + lowSideMargin, left + w - highSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .range([left + lowSideMargin, left + w - highSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d, i) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g2 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueHeight = 0;\r\n\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", hh)\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", \"text-before-edge\")\r\n                  .each(function (d, i) {\r\n                    var thisHeight = this.getBBox().height;\r\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            hh += maxValueHeight;\r\n            dh -= maxValueHeight;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelHeight = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g2.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                return d[panel.Values[0].Col] * ScaleFactor > maxLineValue ||\r\n                  d[panel.Values[0].Col] * ScaleFactor < minLineValue\r\n                  ? panel.OutOfRangeLabelColor\r\n                  : LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var y = hh + dh - b / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisHeight = b;\r\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\r\n              });\r\n            if ($.isNumeric(labelMargin)) {\r\n              dh -= labelMargin;\r\n            } else {\r\n              dh -= maxLabelHeight;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([maxLineValue, minLineValue])\r\n            .range([hh, hh + dh])\r\n            .nice();\r\n\r\n          function hLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"x1\", left + lowSideMargin)\r\n              .attr(\"y1\", valueScale(value))\r\n              .attr(\"x2\", left + w - highSideMargin)\r\n              .attr(\"y2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            hLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            hLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n\r\n                g2.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"height\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(baseLineValue) - valueScale(val)\r\n                    );\r\n                  })\r\n                  .attr(\"width\", width)\r\n                  .attr(\"y\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (width + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            if (panel.LineWidth) {\r\n              var points = [];\r\n              var bw = labelScale.step();\r\n              for (var i = 0; i < data.length; i++) {\r\n                var d = data[i];\r\n                var x = left + lowSideMargin + (i + 0.5) * bw;\r\n                var y = valueScale(d[this.panel.Values[0].Col] * ScaleFactor);\r\n                points.push({\r\n                  x,\r\n                  y,\r\n                });\r\n              }\r\n\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneX;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              var lineGraph = svg\r\n                .append(\"path\")\r\n                .attr(\"d\", lineFunction(points))\r\n                .attr(\"stroke\", panel.LineColor)\r\n                .attr(\"stroke-width\", panel.LineWidth)\r\n                .attr(\"fill\", \"none\");\r\n            }\r\n\r\n            if (panel.DotSize) {\r\n              g2.append(\"circle\")\r\n                .attr(\"r\", panel.DotSize / 2.0)\r\n                .attr(\"fill\", panel.DotColor)\r\n                .attr(\"cx\", function (d) {\r\n                  return (\r\n                    labelScale(d[labelCol]) +\r\n                    (bw * (1.0 - barPadding / 100.0)) / 2.0\r\n                  );\r\n                })\r\n                .attr(\"cy\", function (d) {\r\n                  return valueScale(d[this.panel.Values[0].Col] * ScaleFactor);\r\n                });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            panel.Values.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  panel.Values.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                      (panel.Values.length - 1) /\r\n                      100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (panel.Values.length - 1)) /\r\n                  panel.Values.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val);\r\n                    }\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-after-edge\"\r\n                        : \"text-before-edge\";\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-before-edge\"\r\n                        : \"text-after-edge\";\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length) \r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          if (lowSideMargin > 0) {\r\n            let ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + (left + lowSideMargin) + \", 0)\")\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisLeft(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n\r\n          if (highSideMargin > 0) {\r\n            let ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(\" + (left + w - highSideMargin) + \", 0)\"\r\n              )\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisRight(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n        };\r\n\r\n        let groupNameOffset = this.panel.ShowGroupLabels\r\n          ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n          : 0;\r\n\r\n        if (this.groupedRows != null) {\r\n          let gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          let dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each column of groups...\r\n          var pointsPerCol = [];\r\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let cc = i % gcols;\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\r\n          }\r\n\r\n          let totalPoints = 0;\r\n          for (let i = 0; i < pointsPerCol.length; i++)\r\n            totalPoints += pointsPerCol[i];\r\n\r\n          var colOverheadWidth =\r\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\r\n          var colWidth =\r\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\r\n\r\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          let dh = h / numRows;\r\n          let hh = dh;\r\n          for (let rr = 0; rr < numRows; rr++) {\r\n            let ww = 0;\r\n            for (let cc = 0; cc < gcols; cc++) {\r\n              let nn = pointsPerCol[cc];\r\n\r\n              let ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupVertical(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  ww,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n                ww += dw;\r\n              }\r\n            }\r\n            hh += dh;\r\n          }\r\n        } else {\r\n          plotGroupVertical(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      }\r\n\r\n      var pulseHigh = function (svg) {\r\n        var highFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.highflash\"\r\n        );\r\n\r\n        if (\r\n          $.isNumeric(HighLimitBarFlashTimeout) &&\r\n          highFlashRects._groups.length > 0 &&\r\n          highFlashRects._groups[0].length > 0\r\n        ) {\r\n          highFlashRects.transition().on(\"start\", function highRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", HighLimitBarFlashColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", HighLimitBarColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", highRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      var pulseLow = function (svg) {\r\n        var lowFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.lowflash\"\r\n        );\r\n        if (\r\n          $.isNumeric(LowLimitBarFlashTimeout) &&\r\n          lowFlashRects._groups.length > 0 &&\r\n          lowFlashRects._groups[0].length > 0\r\n        ) {\r\n          lowFlashRects.transition().on(\"start\", function lowRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", LowLimitBarFlashColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", LowLimitBarColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", lowRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      pulseHigh(this.svg);\r\n      pulseLow(this.svg);\r\n    }\r\n\r\n    this.ctrl.renderingCompleted();\r\n  }\r\n\r\n  onConfigChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.ctrl = ctrl;\r\n    this.elem = elem;\r\n\r\n    // for backward compatability (grafana 6.6.0 and earlier)\r\n    var panelContentElem = elem.find(\".panel-content\");\r\n    if (panelContentElem.length) this.elem = panelContentElem;\r\n  }\r\n}\r\n\r\nMultistatPanelCtrl.templateUrl = \"module.html\";\r\n\r\nexport { MultistatPanelCtrl as PanelCtrl };\r\n"]}